rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /activities/{activityId} {
      allow read: if request.auth != null && (request.auth.token.admin == true || request.auth.uid == resource.data.creatorUid);
      allow create: if request.auth != null &&
                     request.resource.data.name is string && request.resource.data.name != '' &&
                     request.resource.data.type is string &&
                     request.resource.data.addr is string && request.resource.data.addr != '' &&
                     request.resource.data.description is string && request.resource.data.description != '' &&
                     request.resource.data.status in ['draft', 'inreview'] &&
                     request.resource.data.creatorUid == request.auth.uid;
      allow update: if request.auth != null && (request.auth.uid == resource.data.creatorUid || request.auth.token.admin == true);
      allow delete: if request.auth != null && (request.auth.uid == resource.data.creatorUid || request.auth.token.admin == true);
    }

    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);
      allow create: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);
      allow update: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);
      allow delete: if request.auth != null && 
                      request.auth.token.admin == true && 
                      request.auth.uid != userId;
    }
  }
} 