rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /activities/{activityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
                     request.resource.data.name is string && request.resource.data.name != '' &&
                     request.resource.data.type is string && request.resource.data.type == 'activity' &&
                     request.resource.data.addr is string && request.resource.data.addr != '' &&
                     request.resource.data.description is string && request.resource.data.description != '' &&
                     request.resource.data.opening_hours is string &&
                     request.resource.data.image_url is string &&
                     request.resource.data.email is string &&
                     request.resource.data.phone is string &&
                     request.resource.data.budget is string &&
                     request.resource.data.start_time is string &&
                     request.resource.data.end_time is string &&
                     request.resource.data.date is string && request.resource.data.date != '' &&
                     request.resource.data.place is string && request.resource.data.place != '' &&
                     request.resource.data.postal_code is string && request.resource.data.postal_code != '' &&
                     request.resource.data.creatorUid is string && request.resource.data.creatorUid == request.auth.uid &&
                     request.resource.data.keys().hasOnly([
                       'type', 'name', 'addr', 'description', 'opening_hours',
                       'image_url', 'email', 'phone', 'budget', 'start_time',
                       'end_time', 'date', 'place', 'postal_code',
                       'creatorUid'
                     ]);
      allow update: if request.auth != null && (request.auth.uid == resource.data.creatorUid || request.auth.token.admin == true);
      allow delete: if request.auth != null && (request.auth.uid == resource.data.creatorUid || request.auth.token.admin == true);
    }

    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.creatorUid || request.auth.token.admin == true);
      allow write: if request.auth != null && request.auth.token.admin == true;
      allow create: if request.auth != null && request.auth.token.admin == true;
      allow delete: if request.auth != null && request.auth.token.admin == true;  
      allow update: if request.auth != null && (request.auth.uid == resource.data.creatorUid || request.auth.token.admin == true);
    }
  }
} 